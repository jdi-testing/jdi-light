language: java
jdk:
  - openjdk8
before_install:
  - sudo apt-get -y install jq
before_script:
  - ls -lah
  - google-chrome-stable --version
addons:
  chrome: stable

env:
  global:
    - CHROME_PROPERTIES="chrome.properties"
    - WITH_PARAMS="-Ddriver=chrome -Dchrome.capabilities.path=$CHROME_PROPERTIES" #add -ntp when maven will be >=3.6.1 on travis
    - GROUP_ID="com.epam.jdi"
    - NOPO_TESTS="jdi-bdd-no-po-tests"
    - NOPO_TESTS_PROPERTY="test-examples/jdi-bdd-no-po-tests"
    - BDD_TESTS="jdi-bdd-tests"
    - HTML_TESTS="jdi-light-html-tests"
    - ANGULAR_TESTS="jdi-light-angular-tests"
    - EXAMPLES="jdi-light-examples"
    - EXAMPLES_PROPERTY="test-examples/jdi-light-examples"
    - PERFORMANCE="jdi-performance"
    - PERFORMANCE_PROPERTY="test-examples/jdi-performance"
    - CHROME_ARGS="--headless"

stages:
  - prepare
  - compile
  - test
  - reports

jobs:
  include:
    - stage: prepare
      name: Welcome to jdi
      script:
        - echo ------------------- WELCOME TO JDI ----------------------
        - mvn --version #it is helpful

    - stage: compile
      name: Compile jdi code
      script:
        - mvn install -DskipTests

    - stage: test
      name: Run tests - no po
      script:
        - mvn -ntp install -DskipTests
        - echo arguments=$CHROME_ARGS > "./$NOPO_TESTS_PROPERTY/src/test/resources/$CHROME_PROPERTIES"
        - mvn verify $WITH_PARAMS -pl $GROUP_ID:$NOPO_TESTS

    - stage: test
      name: Run tests - bdd
      script:
        - mvn -ntp install -DskipTests
        - echo arguments=$CHROME_ARGS > "./$BDD_TESTS/src/test/resources/$CHROME_PROPERTIES"
        - mvn verify $WITH_PARAMS -pl $GROUP_ID:$BDD_TESTS

    #TODO: bootstrap tests exceeded the maximum time limit for jobs (>50min)
    #  - stage: test
    #    name: Run tests - bootstrap
    #    script:
    #    - mvn -ntp install -DskipTests
    #    - echo "arguments=$CHROME_ARGS" > $CHROME_PROPERTIES
    #    - mvn verify $WITH_PARAMS -pl $BOOTSTRAP_TESTS

    - stage: test
      name: Run tests - angular
      script:
        - mvn -ntp install -DskipTests
        - echo arguments=$CHROME_ARGS > "./$ANGULAR_TESTS/src/test/resources/$CHROME_PROPERTIES"
        - mvn verify $WITH_PARAMS -pl $GROUP_ID:$ANGULAR_TESTS

    - stage: test
      name: Run tests - html
      script:
        - mvn -ntp install -DskipTests
        - echo arguments=$CHROME_ARGS > "./$HTML_TESTS/src/test/resources/$CHROME_PROPERTIES"
        - mvn verify $WITH_PARAMS -pl $GROUP_ID:$HTML_TESTS

    - stage: test
      name: Run tests - examples
      script:
        - mvn -ntp install -DskipTests
        - echo arguments=$CHROME_ARGS > "./$EXAMPLES_PROPERTY/src/test/resources/$CHROME_PROPERTIES"
        - mvn verify $WITH_PARAMS -pl $GROUP_ID:$EXAMPLES

    - stage: test
      name: Run tests - performance
      script:
        - mvn -ntp install -DskipTests
        - echo arguments=$CHROME_ARGS > "./$PERFORMANCE_PROPERTY/src/test/resources/$CHROME_PROPERTIES"
        - mvn verify $WITH_PARAMS -pl $GROUP_ID:$PERFORMANCE

    - stage: reports
      name: Deploy allure reports to netlify
      script:
        - npm install -g allure-commandline
        - npm install -g netlify-cli
        - allure --version
        - source reports.sh
        - deployAllureResults
after_failure:
  - echo "Build was failed"
after_success:
  - echo "Build was successful"
after_script:
  - source reports.sh
  - grubAllureResults
  - du -d 1 -h ./
  - ls -la
# extra time during long builds
install:
  - travis_wait
